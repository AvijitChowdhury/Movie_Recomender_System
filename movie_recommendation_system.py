# -*- coding: utf-8 -*-
"""Movie Recommendation System.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1WmjN3k5SB6gD7OtLqREW6bGCs6I3QRTp

#Importing The Dependencies
"""

import numpy as np
import pandas as pd
import difflib
from sklearn.feature_extraction.text import TfidfVectorizer
from sklearn.metrics.pairwise import cosine_similarity

"""# Data Collection And Preprocessing

## loading the csv file to a pandas dataframe
"""

movies_data= pd.read_csv('/content/drive/MyDrive/movies.csv')

"""Printing 5 Rows In The Dataframe"""

movies_data.head()

"""Number of Rows And Columns"""

movies_data.shape

"""# selecting the relevant features for recommendation

"""

selected_features = ['genres','keywords','tagline','cast','director']

print(selected_features)

"""#replacing the null values with null string"""

for feature in selected_features:
  movies_data[feature] =movies_data[feature].fillna('')

"""# Combining All The Relevent Features"""

combined_features = movies_data['genres']+movies_data['keywords']+movies_data['tagline']+movies_data['cast']+movies_data['director']

print(combined_features)

"""# Converting The Text Data To Feature Vector"""

vectorizer = TfidfVectorizer()

feature_vector = vectorizer.fit_transform(combined_features)

print(feature_vector)

"""## Cosine Similarity

# Getting The Similarity Score By Cosine Similarity
"""

similarity = cosine_similarity(feature_vector)

print(similarity)

#similarity shape
similarity.shape

"""# Getting The Movie Name From The User"""

Movie = input("Enter Your Favourite Movie: ")

"""# Creating A List With All The Movie Names Given In The Dataset"""

list_of_all_titles = movies_data['title'].tolist()
print(list_of_all_titles)

"""#Finding The Close Match For The Movie Name Given By The User"""

find_close_match = difflib.get_close_matches(Movie,list_of_all_titles)

print(find_close_match)

close_match  = find_close_match[0]
print(close_match)

"""# Finding The Index of The Movie Based On The Title"""

index_of_movie = movies_data[movies_data.title==close_match]['index'].values[0]

print(index_of_movie)

"""# Getting The List Of Similar Movies"""

similarity_score = list(enumerate(similarity[index_of_movie]))

print(similarity_score)

len(similarity_score)

"""# Sorting The Movies On Their Similarity Score"""

sorted_similar_movies = sorted(similarity_score,key= lambda x:x[1], reverse=True)
print(sorted_similar_movies)

"""# print the name of similar movies based on the index"""

print('Movies Suggested For You. \n')

i = 1

for movie in sorted_similar_movies:
  index = movie[0]
  title_from_index = movies_data[movies_data.index==index]['title'].values[0]
  if(i<30):
    print(i,'.',title_from_index)
    i+=1